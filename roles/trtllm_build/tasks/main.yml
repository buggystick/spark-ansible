---
# roles/trtllm_build/tasks/main.yml
# Build TensorRT-LLM engines as a Kubernetes GPU Job (no host Docker required).

- name: Ensure namespace exists (default)
  command: kubectl get ns default
  environment: { KUBECONFIG: /etc/kubernetes/admin.conf }
  changed_when: false

- name: Ensure Triton models PVC manifest exists
  copy:
    dest: /tmp/triton-models-pvc.yaml
    mode: '0644'
    content: |
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: triton-models
        namespace: default
      spec:
        accessModes: [ "ReadWriteMany" ]
        resources:
          requests:
            storage: 200Gi
        storageClassName: longhorn

- name: Apply Triton models PVC
  command: kubectl apply -f /tmp/triton-models-pvc.yaml
  environment: { KUBECONFIG: /etc/kubernetes/admin.conf }

- name: Create/Update Hugging Face token secret (if provided)
  shell: |
    set -e
    if [ -n "{{ hostvars[inventory_hostname].hf_token | default('') | trim }}" ]; then
      kubectl -n default delete secret hf-token --ignore-not-found=true
      kubectl -n default create secret generic hf-token --from-literal=token='{{ hostvars[inventory_hostname].hf_token | default('') }}'
    fi
  environment: { KUBECONFIG: /etc/kubernetes/admin.conf }
  args: { executable: /bin/bash }
  changed_when: true

- name: Render builder script ConfigMap
  template:
    src: script-cm.yaml.j2
    dest: /tmp/trtllm-build-script-cm.yaml

- name: Apply builder script ConfigMap
  command: kubectl apply -f /tmp/trtllm-build-script-cm.yaml
  environment: { KUBECONFIG: /etc/kubernetes/admin.conf }

- name: Copy build Job manifest
  copy:
    src: trtllm-build-job.yaml
    dest: /tmp/trtllm-build-job.yaml
    mode: '0644'

- name: Delete previous Job if exists (to allow rerun)
  command: kubectl -n default delete job trtllm-build --ignore-not-found=true
  environment: { KUBECONFIG: /etc/kubernetes/admin.conf }
  changed_when: false

- name: Create build Job
  command: kubectl apply -f /tmp/trtllm-build-job.yaml
  environment: { KUBECONFIG: /etc/kubernetes/admin.conf }

- name: Wait for Job completion (up to 12h for big models)
  command: kubectl -n default wait --for=condition=complete --timeout=12h job/trtllm-build
  environment: { KUBECONFIG: /etc/kubernetes/admin.conf }
  register: _waitjob
  changed_when: false

- name: Get Job logs (last run)
  shell: |
    kubectl -n default logs job/trtllm-build --tail=-1 || true
  environment: { KUBECONFIG: /etc/kubernetes/admin.conf }
  register: _joblogs
  changed_when: false

- name: Show summary (debug)
  debug:
    msg: "{{ _joblogs.stdout.splitlines()[-25:] if _joblogs.stdout is defined else [] }}"
